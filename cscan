#!/usr/bin/python
import os
import sys
import subprocess
import tempfile
import numpy as np


CSCANSYS = os.path.dirname(os.path.realpath(__file__))
print CSCANSYS
COREX = "./bin/core"
PLTX = "./bin/simple_hist.py"
LIMX = "./bin/calc_limit"


#Get input file
fullfile = sys.argv[1]
#Check whether inputfile was given with absolute path
if fullfile[0] !='/':
  fullfile = os.getcwd() + "/" +   fullfile
#print  fullfile

#Cross section calculation
os.chdir(CSCANSYS)
print "Calculating cross section ...\n"
core = subprocess.Popen(["%s %s" %(COREX, fullfile) ], stdout=subprocess.PIPE, shell=True)
core.wait() # Wait till finished
(core_out, core_err) = core.communicate() #Catch output and error if send to PIPE



xl   = []
xr   = []
nev  = []
odir = ""
limdir = ""

#Check for plot file and generate plots
#File containg plotting parameters
inp =  tempfile.gettempdir() + "/hist" 
if os.path.isfile(inp):
  print "Generating plots from %s:"%inp
  with open(inp, 'r') as openedFile :
    fno = 0
    for events in openedFile:
      #Get output directory
      if fno ==0 :
        odir = events.split()[0]
      #Get output directory
      elif fno == 1 :
        limdir = events.split()[0]
      #Operate on event files
      else:
        events = events.split()[0]
        print "Plotting %s"%events
        plot = subprocess.Popen(["%s %s" %(PLTX, events)], stdout=None, shell=True)
        #Combine events for global analysis
        with open(events, 'r') as eventfile:
          lno = 0
          for line in eventfile:
            data  = line.split()
            assert len(data)==3
            #First read of data
            if fno == 2:
              xl.append( np.double(data[0]))
              xr.append( np.double(data[1]))
              nev.append( np.double(data[2]))
            #Append further data
            else:
              #print xl[lno], data[0]
              assert xl[lno] == np.double(data[0])
              assert xr[lno] == np.double(data[1])
              nev[lno] += np.double(data[2])
            lno += 1
      fno += 1          
           
           
#Write Core output
log = open(odir+"/cscan.log", 'w')
log.write("%s"%core_out)
log.close

            
#Combine events            
comfile = odir + "/combined.dat"
combined = open(comfile, 'w')            
for i in range(len(xl)):
  combined.write("%s\t%s\t%s\n"%(xl[i], xr[i], nev[i]))
combined.close()  
  
  
#Calculate best exclusion limit
limit = subprocess.Popen(["%s %s %s" %(LIMX, limdir, comfile) ], stdout=None, shell=True)
limit.wait()           